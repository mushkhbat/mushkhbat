---
import Navbar from "@components/Navbar.astro";
import Footer from "@components/Footer.astro";
import { Seo } from "astro-seo-meta"
import tagsName from "@data/Topics.js"
// import Comment from "@components/Comment";
// import Youtube from "@components/Youtube.astro";
const {content, headings} = Astro.props;
const {origin} = Astro.url;
const isReview = content.isReview;
const moreDataForArticle = content.articleData;
let review = {}
let article = {}
if (moreDataForArticle){
	article = moreDataForArticle
}

if (isReview){
review = { review: {
			  "@type": "Review",
			  "itemReviewed": {
				...content.itemReview
			  },
			  "reviewRating": {
				"@type": "Rating",
				"ratingValue": content.review
			  },
			  "name": content.title,
			  "author": {
				"@type": "Person",
				"name": "حمد بنقالي"
			  },
			  "publisher": {
				"@type": "Person",
				"name": "حمد بنقالي",
			  }
			}
			}
}
const toHijri = (date) => {
return new Date(date).toLocaleDateString(
  'ar-SA-u-ca-islamic-umalqura',
  { timeZone: 'Asia/Riyadh', month: 'numeric', weekday: 'long', day: 'numeric', year: 'numeric' }
)
}
const urlFix = (urlString)=> {
	if (urlString.indexOf('http://') === 0 || urlString.indexOf('https://') === 0){
		return urlString;
	}
	return new URL(urlString, origin).href
}
const topicName = tagsName[content.tags[0]].name;
---
<html lang="ar" dir="rtl">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<Seo 
		title={"مشخبط" + (content.title ? " - " + content.title : "")}
		description={content.desc}
		colorScheme="dark"
		twitter={{site: "@mushkhbat", image: urlFix(content.image)}}
		facebook={{image: urlFix(content.image)}}
		/>
		<meta property="og:site_name" content="mushkhbat">
		<meta property="og:locale" content="ar_SA">
		<meta property="og:type" content="article">
		<link rel="canonical" href={new URL(content?.url, origin)}/>
		<link rel="stylesheet" href="/style.css">
		</head>
	<body data-url={content.url}>
		<Navbar from="right" />
		<main>
            <div class="title">
                <h1>{content.title}</h1>
				<div class="datePost">
					<nav aria-label="breadcrumb">
						<ul>
						  <li><a href="/blog/">المدونة</a></li>
						  <li>
							<a href={new URL(content.url + "/..", origin)}>
								{topicName}
							</a>
						  </li>
						  <li><a href={content.url} aria-current="page">{content.title}</a></li>
						</ul>
					</nav>
					<p>{content.dateModified ? "عُدلت" : "كُتبت"} في <time class="textSize-s" datetime={new Date(content.dateModified || content.date).toISOString()} >{toHijri(content.dateModified || content.date)}</time></p>
				</div>
				<hr >
				<div>
					<details>
					<summary>
						<span>محتوى الصفحة</span>
					</summary> 
<menu class="toc">
	{headings.map(itm => {
		return (
			<li data-depth={itm.depth}>
				<a href={new URL(content?.url, origin) + "#" + itm.slug}>
					{itm.text}
				</a>
			</li>)
	})}
</menu>
					</details> 
				</div>
            	</div>

            <article class="content" id="article">
                <slot></slot>
            </article>
			<!-- <Comment client:load /> -->
        </main>
		<Footer />
		<script is:inline src="/script.js"></script>
		<script type="application/ld+json" 
		set:html={
		JSON.stringify(
			[{
				"@context": "https://schema.org",
				"@type": "BlogPosting",
				"headline": content.title,
				"image": urlFix(content.image),
				"datePublished": new Date(content.date).toISOString(),
				... article,
				"author": {
					"@type": "Person",
					"name": "حمد بنقالي",
					"url": "https://x7md.net/about-me"
					}, ...review,
				...(content?.dateModified ? {"dateModified": new Date(content?.dateModified).toISOString()} : {}),

			},
			{
			"@context": "https://schema.org",
			"@type": "BreadcrumbList",
			"name": "المدونة > " + topicName + " > " + content.title,
			"itemListElement": [{
				"@type": "ListItem",
				"position": 1,
				"name": "التدوينات",
				"item": new URL("/blog", origin)
			},{
				"@type": "ListItem",
				"position": 2,
				"name": topicName,
				"item": new URL(content.url, origin)
			},{
				"@type": "ListItem",
				"position": 3,
				"name": content.title
			}]
			}
			])
		}>
		</script>
	<style>
		:global(figcaption) {
			font-size: calc(var(--unit) * 2vw);
			line-height: normal;
		}
		:global(picture){
			position: relative;
		}
		:global(img[src$="#blur"]) {
			position: relative;
			filter: blur(.75rem);
			object-fit: cover;
			aspect-ratio: 16/9;
		}
	</style>
	<script>
		document.querySelectorAll('img[src$="#blur"]').forEach((ele)=> {
			ele.addEventListener("click", (e)=> {
				e.target.src = e.target.src.split("#")[0]
				const clone = e.target.cloneNode(true);
				e.target.replaceWith(clone);
		})
			
		})
	</script>
	</body>
</html>
