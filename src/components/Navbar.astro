---
let { from } = Astro.props;
import navBarData from "./../data/Navbar"
---
<div>
		<nav role="navigation" class="container">
            <div class={"logoContainer " + (from == "right" ? "form-right" : "form-left")}>
                <div class={"menu " + (from == "right" ? "form-right" : "form-left")}>
                    <button class="menu-btn">
                        <svg stroke="#ffffff" fill="none" viewBox="0 0 24 24" class="h-6 w-6"><title>Menu | Deno</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h7"></path></svg>
                    </button>
                </div>
                <a href="/"><img src="/assets/mushkhbat.svg" alt="logo"></a>
                <div class="nav-list order-1 set-left">
                  <ul class="list-none nav-items">
                    {navBarData.map((item) => (<li>
                      <a class="block px-3 py-2
                                rounded-md text-base
                                font-medium text-[#A75E99]
                                focus:outline-none
                                transition duration-150 ease-in-out"
                      href={item.link}>{item.name}</a>
                      </li>))}
                  </ul>
                </div>
            </div>
		</nav>
</div>

<div class="open-nav">
    <div class="absolute top-0 inset-x-0 p-2 lg:hidden">
        <div class="rounded-lg shadow-md">
        <div class="rounded-lg bg-darker shadow-xs overflow-hidden">
        <div class={"px-5 pt-4 flex items-center justify-between" + (from == "right" ? " flex-revert" : "")}>
        <a class="flex items-center" href="/">
        <div class="inline-flex items-start">
            <img alt="logo" src="/assets/mushkhbat.svg">
        </div>
        </a>
        <div class="mr-2">
        <button class="close" type="button" class="inline-flex items-center justify-center p-2 rounded-md text-[#A75E99] hover:bg-[#260B3A] focus:outline-none focus:bg-[#260B3A] transition duration-150 ease-in-out">
        <svg class="h-6 w-6" stroke="#ffffff" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
        </button>
        </div>
        </div>
        <ul class="list-none px-2">
            {navBarData.map((item) => (<li>
                <a class="block px-3 py-2
                          rounded-md text-base
                          font-medium text-[#A75E99] hover:bg-[#5F1668]
                          focus:outline-none focus:bg-[#5F1668]
                          transition duration-150 ease-in-out"
                href={item.link}>{item.name}</a>
                </li>))}
        </ul>
        </div>
        </div>
        </div>

</div>


<style is:global>
.set-left {
  margin-left: auto;
}
.nav-items {
  display: flex;
  padding: 0;
}
.nav-items a {
  text-decoration: none;
}
.order-1 {
order: -1;
}
:root {
    --close: none;
}
.open-nav {
    display: var(--close);
}
.open-nav a {
    text-decoration: none;
}
[role="navigation"] a {
  will-change: font;
  transition: font .2s;
}
[role="navigation"] a:hover, [role="navigation"] a:active {
    font-weight: bolder;
}
.open-nav button {
    padding: 0;
    width: auto;
    background-color: transparent;
    border-color: transparent;
}
.absolute {
  position: absolute;
}

.inset-x-0 {
  left: 0px;
  right: 0px;
}

.top-0 {
  top: 10px;
}

.m-auto {
  margin: auto;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.mr-2 {
    margin-right: -0.5rem;
}
.block {
  display: block;
}

.flex {
  display: flex;
  flex-direction: row-reverse;
}

.flex-revert {
  flex-direction: revert;
}

.inline-flex {
  display: inline-flex;
}

.h-10 {
  height: 2.5rem;
}

.h-6 {
  height: 1.5rem;
}

.w-auto {
  width: auto;
}

.w-6 {
  width: 1.5rem;
}

.list-none {
  list-style-type: none;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.overflow-hidden {
  overflow: hidden;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}


.p-2 {
  padding: 0.5rem;
}

.p-1 {
  padding: 0.25rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pb-3 {
  padding-bottom: 0.75rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.leading-\[3\.25rem\] {
  line-height: 3.25rem;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-\[\#A75E99\] {
  --tw-text-opacity: 1;
  color: rgb(167 94 153 / var(--tw-text-opacity));
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.transition {
  transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-150 {
  transition-duration: 150ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.hover\:bg-\[\#260B3A\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(38 11 58 / var(--tw-bg-opacity));
}

.hover\:bg-\[\#5F1668\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(95 22 104 / var(--tw-bg-opacity));
}

.focus\:bg-\[\#260B3A\]:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(38 11 58 / var(--tw-bg-opacity));
}

.focus\:bg-\[\#5F1668\]:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(95 22 104 / var(--tw-bg-opacity));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

@media (min-width: 640px) {
  .sm\:h-12 {
    height: 3rem;
  }
}

@media (min-width: 1024px) {
  .lg\:hidden {
    display: none;
  }

  .lg\:p-2 {
    padding: 0.5rem;
  }

  .lg\:py-2 {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }
}

</style>